{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","search","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAACC,GACnB,OACE,sBAAKC,UAAW,iBAAhB,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJXC,EAAW,SAACR,GACvB,OAAQ,qBAAKC,UAAW,YAAhB,SACLD,EAAMS,UAAYT,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3C,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJZM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCCG,E,kDAnCb,WAAYhB,GAAQ,IAAD,8BACjB,gBAaFa,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,OAAQF,EAAEG,OAAOC,SAb9B,EAAKC,MAAQ,CACXlB,QAAS,GACTe,OAAQ,IAJK,E,gEAQE,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACd,QAAUuB,S,+BAOlC,IAAD,EACmBC,KAAKN,MAAxBlB,EADA,EACAA,QAASe,EADT,EACSA,OACVU,EAAkBzB,EAAQ0B,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAOY,kBAE7F,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d5fa534a.chunk.js","sourcesContent":["import React from 'react'\nimport './card.css'\n\nexport const Card = (props) => {\n  return (\n    <div className={'card-container'}>\n      <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=150x180`} />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  )\n}","import React from 'react'\nimport './card-list.css'\nimport {Card} from '../card/card'\n\nexport const CardList = (props) => {\n  return (<div className={'card-list'}>\n    {props.monsters && props.monsters.map(monster => (\n      <Card key={monster.id} monster={monster}/>\n    ))\n    }\n  </div>)\n}","import React from 'react'\nimport './search-box.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n  <input\n    className='search'\n    type='search'\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n)","import React, { Component } from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list'\nimport {SearchBox} from './components/search-box/search-box'\n\nclass App extends Component {\n  constructor(props) {\n    super()\n      this.state = {\n        monster: [],\n        search: ''\n      }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monster : users}))\n  }\n\n  handleChange = (e) => {\n    this.setState({search: e.target.value})\n  }\n\n  render() {\n    const {monster, search} = this.state\n    const filteredMonster = monster.filter(monster => monster.name.toLowerCase().includes(search.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search Monster'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonster}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}